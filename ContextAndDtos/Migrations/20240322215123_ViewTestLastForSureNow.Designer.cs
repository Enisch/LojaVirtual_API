// <auto-generated />
using System;
using Context.ContextForDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Context.Migrations
{
    [DbContext(typeof(ContextClass))]
    [Migration("20240322215123_ViewTestLastForSureNow")]
    partial class ViewTestLastForSureNow
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Infra.Data.Domain.Models.Categoria_produtos", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NomeCategoria");

                    b.Property<string>("DescriçãoCategoria")
                        .HasColumnType("longtext")
                        .HasColumnName("DescriçãoCategoria");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria_Produtos");
                });

            modelBuilder.Entity("Infra.Data.Domain.Models.ContaUsuario", b =>
                {
                    b.Property<int>("idConta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idConta");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idConta"));

                    b.Property<double>("Descontos")
                        .HasColumnType("double")
                        .HasColumnName("DescontosParaUsuario");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.Property<int>("QtdDeProdutosComprados")
                        .HasColumnType("int")
                        .HasColumnName("QtdDeProdutosComprados");

                    b.Property<string>("RankUser")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RankUsuario");

                    b.Property<double>("Saldo")
                        .HasColumnType("double")
                        .HasColumnName("Saldo");

                    b.HasKey("idConta");

                    b.ToTable("ContaUsuario");
                });

            modelBuilder.Entity("Infra.Data.Domain.Models.ControleDeVendas", b =>
                {
                    b.Property<int>("IdControle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdControle");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdControle"));

                    b.Property<int>("FKidUsuario")
                        .HasColumnType("int")
                        .HasColumnName("FKidUsuario");

                    b.Property<int>("FkIdProdutos")
                        .HasColumnType("int")
                        .HasColumnName("idProdutos");

                    b.Property<DateOnly>("VendaData")
                        .HasColumnType("date")
                        .HasColumnName("DataVenda");

                    b.HasKey("IdControle");

                    b.ToTable("ControleVendas");
                });

            modelBuilder.Entity("Infra.Data.Domain.Models.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProdutos");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaDoProduto")
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NomeProduto");

                    b.Property<int>("QtdProduto")
                        .HasColumnType("int")
                        .HasColumnName("QtdProduto");

                    b.Property<double>("ValorDoProduto")
                        .HasColumnType("double")
                        .HasColumnName("ValorProduto");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Infra.Data.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("EmailUsuario");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsAdmin");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("nomeUsuario");

                    b.Property<byte[]>("Senha")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("SenhaUsuario");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Infra.Data.Domain.Views.ProdutosComCategoria_View", b =>
                {
                    b.Property<string>("NomeCategoria")
                        .HasColumnType("longtext");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("longtext");

                    b.Property<int>("QtdProduto")
                        .HasColumnType("int");

                    b.Property<double>("ValorProduto")
                        .HasColumnType("double");

                    b.Property<int>("idProdutos")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ProdutosCategoria_View", (string)null);

                    b.ToSqlQuery("Select * from lojavirtual.produtoscategoria_view;");
                });
#pragma warning restore 612, 618
        }
    }
}
